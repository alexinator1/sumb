// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * sales API
 *
 * API для модуля sales
 *
 * API version: 1.0.0
 */

package salesgenerated

import (
	"context"
	"net/http"
)



// ReportsAPIRouter defines the required methods for binding the api requests to a responses for the ReportsAPI
// The ReportsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a ReportsAPIServicer to perform the required actions, then write the service results to the http response.
type ReportsAPIRouter interface { 
	SalesReportDailyGet(http.ResponseWriter, *http.Request)
}
// SalesAPIRouter defines the required methods for binding the api requests to a responses for the SalesAPI
// The SalesAPIRouter implementation should parse necessary information from the http request,
// pass the data to a SalesAPIServicer to perform the required actions, then write the service results to the http response.
type SalesAPIRouter interface { 
	SalesGet(http.ResponseWriter, *http.Request)
	SalesPost(http.ResponseWriter, *http.Request)
	SalesIdGet(http.ResponseWriter, *http.Request)
	SalesReportDailyGet(http.ResponseWriter, *http.Request)
}


// ReportsAPIServicer defines the api actions for the ReportsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type ReportsAPIServicer interface { 
	SalesReportDailyGet(context.Context, string) (ImplResponse, error)
}


// SalesAPIServicer defines the api actions for the SalesAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type SalesAPIServicer interface { 
	SalesGet(context.Context, int32, int32) (ImplResponse, error)
	SalesPost(context.Context, CreateSaleRequest) (ImplResponse, error)
	SalesIdGet(context.Context, int32) (ImplResponse, error)
	SalesReportDailyGet(context.Context, string) (ImplResponse, error)
}
