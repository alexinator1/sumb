// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * sales API
 *
 * API для модуля sales
 *
 * API version: 1.0.0
 */

package salesgenerated

import (
	"context"
	"net/http"
	"errors"
)

// SalesAPIService is a service that implements the logic for the SalesAPIServicer
// This service should implement the business logic for every endpoint for the SalesAPI API.
// Include any external packages or services that will be required by this service.
type SalesAPIService struct {
}

// NewSalesAPIService creates a default api service
func NewSalesAPIService() *SalesAPIService {
	return &SalesAPIService{}
}

// SalesGet - Список продаж
func (s *SalesAPIService) SalesGet(ctx context.Context, page int32, limit int32) (ImplResponse, error) {
	// TODO - update SalesGet with the required logic for this service method.
	// Add api_sales_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, SaleListResponse{}) or use other options such as http.Ok ...
	// return Response(200, SaleListResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("SalesGet method not implemented")
}

// SalesPost - Создать продажу
func (s *SalesAPIService) SalesPost(ctx context.Context, createSaleRequest CreateSaleRequest) (ImplResponse, error) {
	// TODO - update SalesPost with the required logic for this service method.
	// Add api_sales_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(201, Sale{}) or use other options such as http.Ok ...
	// return Response(201, Sale{}), nil

	// TODO: Uncomment the next line to return response Response(400, SalesPost400Response{}) or use other options such as http.Ok ...
	// return Response(400, SalesPost400Response{}), nil

	// TODO: Uncomment the next line to return response Response(409, SalesPost409Response{}) or use other options such as http.Ok ...
	// return Response(409, SalesPost409Response{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("SalesPost method not implemented")
}

// SalesIdGet - Получить продажу по ID
func (s *SalesAPIService) SalesIdGet(ctx context.Context, id int32) (ImplResponse, error) {
	// TODO - update SalesIdGet with the required logic for this service method.
	// Add api_sales_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, Sale{}) or use other options such as http.Ok ...
	// return Response(200, Sale{}), nil

	// TODO: Uncomment the next line to return response Response(404, SalesIdGet404Response{}) or use other options such as http.Ok ...
	// return Response(404, SalesIdGet404Response{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("SalesIdGet method not implemented")
}

// SalesReportDailyGet - Ежедневный отчет по продажам
func (s *SalesAPIService) SalesReportDailyGet(ctx context.Context, date string) (ImplResponse, error) {
	// TODO - update SalesReportDailyGet with the required logic for this service method.
	// Add api_sales_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, SalesReportDailyGet200Response{}) or use other options such as http.Ok ...
	// return Response(200, SalesReportDailyGet200Response{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("SalesReportDailyGet method not implemented")
}
