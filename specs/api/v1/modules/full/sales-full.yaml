openapi: 3.0.3
info:
  title: sales API
  version: 1.0.0
  description: API для модуля sales

servers:
  - url: http://localhost:8080/api/v1
    description: Development server

# Схемы для продаж
components:
  schemas:
    Sale:
      type: object
      properties:
        id:
          type: integer
          example: 1
        productId:
          type: integer
          example: 5
        productName:
          type: string
          example: "Ноутбук"
        quantity:
          type: integer
          example: 2
        price:
          type: number
          format: float
          example: 1500.50
        totalPrice:
          type: number
          format: float
          example: 3001.00
        employeeId:
          type: integer
          example: 1
        employeeName:
          type: string
          example: "Иван Петров"
        createdAt:
          type: string
          format: date-time
          example: "2024-01-15T14:30:00Z"
      required: [id, productId, quantity, totalPrice, createdAt]

    CreateSaleRequest:
      type: object
      properties:
        productId:
          type: integer
          example: 5
        quantity:
          type: integer
          minimum: 1
          example: 2
      required: [productId, quantity]

    SaleListResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Sale'
        pagination:
          $ref: '../../components/common.yaml#/components/schemas/Pagination'

  responses:
    SaleNotFound:
      description: Продажа не найдена
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Sale Not Found"
              message:
                type: string

    InsufficientStock:
      description: Недостаточно товара на складе
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Insufficient Stock"
              message:
                type: string
              availableStock:
                type: integer
                example: 5

# ВСЕ пути для продаж
paths:
  /sales:
    get:
      summary: Список продаж
      tags: [Sales]
      parameters:
        - $ref: '../../components/parameters.yaml#/components/parameters/PageQueryParam'
        - $ref: '../../components/parameters.yaml#/components/parameters/LimitQueryParam'
      responses:
        200:
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaleListResponse'
    
    post:
      summary: Создать продажу
      tags: [Sales]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSaleRequest'
      responses:
        201:
          description: Продажа создана
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sale'
        400:
          $ref: '../../components/common.yaml#/components/responses/ValidationError'
        409:
          $ref: '#/components/responses/InsufficientStock'

  /sales/{id}:
    parameters:
      - $ref: '../../components/parameters.yaml#/components/parameters/IdPathParam'
    get:
      summary: Получить продажу по ID
      tags: [Sales]
      responses:
        200:
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sale'
        404:
          $ref: '#/components/responses/SaleNotFound'

  /sales/report/daily:
    get:
      summary: Ежедневный отчет по продажам
      tags: [Sales, Reports]
      parameters:
        - name: date
          in: query
          required: true
          schema:
            type: string
            format: date
          description: Дата отчета (YYYY-MM-DD)
      responses:
        200:
          description: Отчет по продажам
          content:
            application/json:
              schema:
                type: object
                properties:
                  date:
                    type: string
                    format: date
                  totalSales:
                    type: number
                    format: float
                  totalItems:
                    type: integer
                  sales:
                    type: array
                    items:
                      $ref: '#/components/schemas/Sale'