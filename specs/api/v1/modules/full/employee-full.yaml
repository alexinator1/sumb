openapi: 3.0.3
info:
  title: employee API
  version: 1.0.0
  description: API для модуля employee

servers:
  - url: http://localhost:8080/api/v1
    description: Development server

# Схемы (модели) для сотрудников
components:
  schemas:
    Employee:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: "Иван Петров"
        role:
          type: string
          enum: [cashier, manager, admin]
          example: "cashier"
        phone:
          type: string
          example: "+79161234567"
        createdAt:
          type: string
          format: date-time
          example: "2024-01-15T10:30:00Z"
      required: [id, name, role, phone]

    CreateEmployeeRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 2
          maxLength: 100
          example: "Иван Петров"
        role:
          type: string
          enum: [cashier, manager, admin]
          example: "cashier"
        phone:
          type: string
          pattern: '^\+?[1-9]\d{1,14}$'
          example: "+79161234567"
      required: [name, role, phone]

    UpdateEmployeeRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 2
          maxLength: 100
          example: "Иван Петров"
        role:
          type: string
          enum: [cashier, manager, admin]
          example: "manager"
        phone:
          type: string
          pattern: '^\+?[1-9]\d{1,14}$'
          example: "+79161234567"
      required: [name, role, phone]

    EmployeeListResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Employee'
        pagination:
          $ref: '../components/common.yaml#/components/schemas/Pagination'

  responses:
    EmployeeNotFound:
      description: Сотрудник не найден
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Employee Not Found"
              message:
                type: string
                example: "Employee with ID 123 not found"

# ВСЕ пути для сотрудников в одном месте
paths:
  /employees:
    get:
      summary: Список сотрудников
      description: Получить список сотрудников с пагинацией
      tags: [Employees]
      parameters:
        - $ref: '../components/parameters.yaml#/components/parameters/PageQueryParam'
        - $ref: '../components/parameters.yaml#/components/parameters/LimitQueryParam'
      responses:
        200:
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeListResponse'
    
    post:
      summary: Создать сотрудника
      description: Создать нового сотрудника
      tags: [Employees]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEmployeeRequest'
      responses:
        201:
          description: Сотрудник создан
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
        400:
          $ref: '../components/common.yaml#/components/responses/ValidationError'

  /employees/{id}:
    parameters:
      - $ref: '../components/parameters.yaml#/components/parameters/IdPathParam'
    get:
      summary: Получить сотрудника по ID
      tags: [Employees]
      responses:
        200:
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
        404:
          $ref: '#/components/responses/EmployeeNotFound'

    put:
      summary: Обновить сотрудника
      tags: [Employees]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEmployeeRequest'
      responses:
        200:
          description: Сотрудник обновлен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
        404:
          $ref: '#/components/responses/EmployeeNotFound'

    delete:
      summary: Удалить сотрудника
      tags: [Employees]
      responses:
        204:
          description: Сотрудник удален
        404:
          $ref: '#/components/responses/EmployeeNotFound'